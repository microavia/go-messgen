// Code generated by go-messgen. DO NOT EDIT.

package {{.Module.Module.Protocol}}

import (
	"fmt"
)

var _ = fmt.Sprintf

{{$StdTypes := .StdTypes}}
{{$Messages := .Module.Messages}}

{{range $Message := $Messages}}
{{$MessageName := CamelCase $Message.Name}}
type {{$MessageName}} struct {
	{{range $Field := $Message.Fields -}}
		{{$FieldTypeName := CamelCase $Field.Type.Name -}}
		{{if index $StdTypes $Field.Type.Name -}}
			{{$FieldTypeName = $Field.Type.Name -}}
		{{end -}}
    	{{CamelCase $Field.Name}} {{if $Field.Type.Array}}[{{if $Field.Type.ArraySize}}{{$Field.Type.ArraySize}}{{end}}]{{end}}{{$FieldTypeName}} // {{$Field.Name}} {{$Field.Type.Name}}
	{{end -}}
}

const {{$MessageName}}ID = {{$Message.ID}}

const {{$MessageName}}MinSize =
	{{range $Field := $Message.Fields -}}
		{{if $Field.Type.Array -}}
			{{if $Field.Type.ArraySize -}}
				{{$Field.Type.ArraySize}} * // {{$Field.Name}} static array size
			{{else -}}
				4 + // dynamic array length
			{{end -}}
		{{end -}}
		{{if index $StdTypes $Field.Type.Name -}}
			{{$Field.Type.Name}}Size + // {{$Field.Name}}
		{{else -}}
			{{CamelCase $Field.Type.Name}}MinSize + // {{$Field.Name}}
		{{end -}}
	{{end -}}
	0

func (v *{{$MessageName}}) ID() int {
	return {{$MessageName}}ID
}

func (v *{{$MessageName}}) Size() int {
	{{if not (IsSizeDynamic $Messages $Message.Name)}}
		return {{$MessageName}}MinSize
	{{else -}}
		return {{ range $Field := $Message.Fields -}}
			{{if (IsSizeDynamic $Messages $Field.Type.Name) -}}
                v.{{CamelCase $Field.Name}}.Size() + // {{$Field.Name}}
			{{else -}}
			    {{- $FieldTypeSize := print (CamelCase $Field.Name) "MinSize" -}}
			    {{- if index $StdTypes $Field.Type.Name -}}
			    	{{- $FieldTypeSize = print $Field.Type.Name "Size" -}}
			    {{end -}}
				{{if $Field.Type.Array -}}
					{{if $Field.Type.ArraySize -}}
						{{$Field.Type.ArraySize}} * {{$FieldTypeSize}} + // {{$Field.Name}} static array size
					{{else -}}
						4 + len(v.{{CamelCase $Field.Name}}) * {{$FieldTypeSize}} + // {{$Field.Name}} dynamic array size
					{{end -}}
				{{else -}}
                    {{$FieldTypeSize}} + // {{$Field.Name}}
				{{end -}}
			{{end -}}
        {{end -}}
		0
    {{end -}}
}

func (v *{{$MessageName}}) String() string {
	return fmt.Sprintf("<{{$MessageName}}{{range $Message.Fields}} {{.Name}}=%v{{end}}>",
		{{range $Message.Fields}}v.{{CamelCase .Name}},{{end}})
}
{{end}}
